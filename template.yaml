AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  flask-aws-lambda-api

  Sample SAM Template for flask-aws-lambda-api

Globals:
  Function:
    Timeout: 20
    MemorySize: 256

Resources:
  FlaskLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: flask-layer
      Description: Layer for Flask and dependencies v1.0.0
      ContentUri: lambda-layers/flask-layer
      CompatibleRuntimes:
        - python3.8
      RetentionPolicy: Retain
  FlaskApi:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src.lambda_handler.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Layers:
        - !Ref FlaskLayer
      Events:
        HealthCheckApi:
          Type: Api
          Properties:
            Path: /health
            Method: get
        GetProduct:
          Type: Api
          Properties:
            Path: /products/{id}
            Method: get
            RequestParameters:
              - method.request.path.id:
                  Required: true
                  Type: integer
        UpdateProduct:
          Type: Api
          Properties:
            Path: /products/{id}
            Method: put
            RequestModel:
              Model: ProductUpdateModel
              ValidateBody: true
        CreateProduct:
          Type: Api
          Properties:
            Path: /products
            Method: post
            RequestModel:
              Model: ProductCreateModel
              ValidateBody: true
  ProductGetModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: application/json
      RestApiId: !Ref ServerlessRestApi
      Schema: ${file(src/schemas/products/get.json)}
  ProductUpdateModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: application/json
      RestApiId: !Ref ServerlessRestApi
      Schema: ${file(src/schemas/products/update.json)}s
  ProductCreateModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: application/json
      RestApiId: !Ref ServerlessRestApi
      Schema: ${file(src/schemas/products/create.json)}
  ErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Lambda function error rate > 1%
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold

  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"
      Auth:
        ApiKeyRequired: true
      MethodSettings:
        - ThrottlingBurstLimit: 100
          ThrottlingRateLimit: 50
          ResourcePath: "/*"
          HttpMethod: "*"

Outputs:
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
